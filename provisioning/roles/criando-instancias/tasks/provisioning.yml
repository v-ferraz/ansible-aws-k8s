---
- name: Criando o Security Group
  local_action:
    module: ec2_group
    name: "{{sec_group_name}}"
    description: SG Giropops
    region: "{{region}}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WaveNet UDP
    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: WaveNet UDP
    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WaveNet TCP
    - proto: tcp
      from_port: 2379
      to_port: 2380
      cidr_ip: 0.0.0.0/0
      rule_desc: etcd server API
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-apiserver
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
      rule_desc: kubelet API
    - proto: tcp
      from_port: 10251
      to_port: 10251
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-scheduler
    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-controller-manager
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: kubelet API Read-only
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Service
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2
  local_action: ec2
    group="{{sec_group_name}}"
    instance_type="{{instance_type}}"
    image="{{image}}"
    wait=yes
    region="{{region}}"
    keypair="{{keypair}}"
    count="{{cont}}"
  register: ec2

- name: Adicionando a instancia ao inventario temp
  add_host: name={{ item.public_ip }} groups=giropops-new
  with_items: "{{ ec2.instances }}"
 
- name: Adicionando o IP publico ao arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.public_ip }}
    insertafter="\[kubernetes\]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: Adicionando o IP privado ao arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.private_ip }}
    insertafter="\[kubernetes-privateip\]" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: Esperando o SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.instances}}"

- name: Adicionando TAG
  local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: ansible-{{ item.ami_launch_index|int + 1 }}
